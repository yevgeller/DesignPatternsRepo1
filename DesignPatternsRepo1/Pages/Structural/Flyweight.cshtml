@page
@model DesignPatternsRepo1.Pages.Structural.FlyweightModel
@{
}

<h1 class="title is-1 is-spaced"><i class="fa-solid fa-bowl-rice mr-2"></i>Flyweight</h1>
<h2 class="subtitle">Creating a large number of similar objects while sharing some of their state to save memory</h2>
<div class="content">

    <div class="block">
        In case many objects need to be created and some of their state is the same among them (or groups of them),
        then Flyweight pattern can be used to save memory.
    </div>

    <div class="block">
        The idea behind this pattern is to separate the common parts among all types of objects (intrinsic data) 
        and their differences (extrinsic data). Then create a dictionary of some sort to store just one copy of
        each type and provide a way to set extrinsic data. 
    </div>
    <div class="block">
        The reasoning behind such separation is to save on memory by not storing same data over and over again.
    </div>

    <div class="block">
        The following code imitates drawing various plants for a game background. Assumption is that there will need to be
        many plants in the background and the game needs to run smoothly on systems with even limited resources. 
        The current choice of background plants is grass, fern, or pine trees, and name and description will be the same among 
        each type of plant, but each of the plants will have some individual trait that will be shown in the display method.
    </div>
    <pre><code class="language-ts">

    </code></pre>
</div>
<bottom-nav next-pointer-word="Next"
            next-icon1="fa-solid fa-circle-question"
            next-icon3="fa-solid fa-arrow-right"
            next-link="Index"
            next-name="TBA"></bottom-nav>
<script>hljs.highlightAll();</script>
