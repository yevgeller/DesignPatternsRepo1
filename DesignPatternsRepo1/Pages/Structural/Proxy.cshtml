@page
@model DesignPatternsRepo1.Pages.Structural.ProxyModel
@{
}

<h1 class="title is-1 is-spaced"><i class="fa-solid fa-door-open mr-2"></i>Proxy</h1>
<h2 class="subtitle">A placeholder for another object for a few reasons</h2>
<div class="content">

    <div class="block">
        The Proxy software design pattern puts another object between the caller and the callee and
        it is done for several reasons:
        <ul>
            <li>Remote access. Client communicates with a proxy object as if it was a local resource</li>
            <li>
                Virtualizing resources. Client communicates with a proxy object
                while an expensive object is created.
            </li>
            <li>
                Smart proxy. Client communicates with a proxy object while proxy object performs
                additional duties. Essentially a <a asp-area="" asp-page="/Structural/Decorator"><i class="fa-solid fa-chart-line mr-2"></i>Decorator</a>.
            </li>
            <li>
                Protection proxy. Client communicates with a proxy object, which ensures that the
                client actually has proper access to the resource.
            </li>
        </ul>
    </div>
    <div class="block">
        The difference between <a asp-area="" asp-page="/Structural/Decorator"><i class="fa-solid fa-chart-line mr-2"></i>Decorator</a> and Proxy is that 
        Proxy controls the lifecycle of an object that it contains, while Decorator is controlled by the execution flow. Also, Proxy controls access 
        to an object, while Decorator focuses on adding functionality.
    </div>
    <div class="block">
        Let's look at some code examples. First, let's define a "resource:"
    </div>
    <pre><code class="language-ts">class Resource {
  getResource(): boolean {
    console.log("Here you go!");
    return true;
  }
}
</code></pre>
    <div class="block">

    </div>
    <div class="block">
        Source: <ul>
            <li>
                <a href="https://app.pluralsight.com/library/courses/c-sharp-10-design-patterns/table-of-contents">
                    C# 10 Design Patterns course (Pluralsight)
                </a>
            </li>
            <li>
                <a href="https://refactoring.guru/design-patterns/proxy">Proxy (Refactoring Guru)</a>
            </li>
        </ul>
    </div>
</div>




<bottom-nav next-pointer-word="Next"
            next-icon1="fa-solid fa-bowl-rice"
            next-icon3="fa-solid fa-arrow-right"
            next-link="Structural|Flyweight"
            next-name="Flyweight"></bottom-nav>
<script>hljs.highlightAll();</script>