@page
@model DesignPatternsRepo1.Pages.Behavioral.CommandModel
@{
}

<h1 class="title is-1 is-spaced"><i class="fa-solid fa-bullhorn mr-2"></i>Command</h1>
<h2 class="subtitle">Abstracting callable actions such that they can be assigned to multiple callers and support undoing </h2>
<div class="content">  

Command becomes a self-sufficient unit that knows how to do everything and knows how to undo itself too.

<div class="block">Command pattern is essentially abstracting an action into its own self-sufficient object that knows how to 
    do one thing and one thing alone. Well, maybe more than one thing.
</div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>
<div class="block"></div> 
<pre><code class="language-ts"></code></pre>

</div>


<bottom-nav next-pointer-word="Next"
            next-icon1="fa-solid fa-ICON"
            next-icon3="fa-solid fa-arrow-right"
            next-link="FOLDER|PAGE"
            next-name="PATTERNNAME"></bottom-nav>
<script>hljs.highlightAll();</script>