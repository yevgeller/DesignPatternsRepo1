@page
@model DesignPatternsRepo1.Pages.Creational.FactoryModel
@{
}
<script>hljs.highlightAll();</script>

<h1 class="title is-1 is-spaced">Factory Pattern ye</h1>
<h2 class="subtitle">A pattern used to differentiate between items that have something in common</h2>


<p>Problem: extending functionality for more providers.</p>
<p>Example code:</p>
<pre><code class="language-ts">
  class SimpleToyFactory {
    makeAToy(): ToyCar {
      return new ToyCar();
    }
  }
  </code>
</pre>
<p>The code above demonstrates how a simple toy factory can make the only toy they know about -- a car. But what if they learned to create other toys?</p>

<pre>Some code here</pre>

<pre><code class="language-ts">
    interface Present {
    whatIsIt(): string;
  }

  class ToyCar implements Present {
    whatIsIt(): string {
      return "This is a toy car";
    }
  }

  class ToyBoat implements Present {
    whatIsIt(): string {
      return "This is a toy boat";
    }
  }

  class BagOfCoal implements Present {
    whatIsIt(): string {
      return "This kid has been naughty";
    }
  }

  enum ToyType {
    car,
    boat,
    coal,
  }
//Creator class
  class ToyFactory {
    makeAToy(typeOfToy: ToyType): Present {
      switch (typeOfToy) {
        case ToyType.boat: {
          return new ToyBoat();
        }
        case ToyType.car: {
          return new ToyCar();
        }
        case ToyType.coal: {
          return new BagOfCoal();
        }
      }
    }
  }

  class ElvesFactory {
    toyFactory: ToyFactory;

    constructor(toyFactory: ToyFactory) {
      this.toyFactory = toyFactory;
    }

    makeToys(order: ToyType[]) {
      order.forEach((x) => {
        let toy = this.toyFactory.makeAToy(x);
        console.log(toy.whatIsIt());
      });
    }
  }

  let tf = new ToyFactory();
  let toyProductionFacility = new ElvesFactory(tf);
  let order = new Array(
    ToyType.boat,
    ToyType.car,
    ToyType.boat,
    ToyType.car,
    ToyType.coal,
    ToyType.car
  );
  toyProductionFacility.makeToys(order);
  </code>
</pre>

<p><code>Some other code right here</code></p>

<div class="highlight"><pre><code>Some more code right over here

    const a = () => return 'here';
</code></pre></div>